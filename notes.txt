why react?hype,job,trend,build ui
makes easy to manage and build complex frontend
at the end browser just understand html,css,js
so react at the end compile hota hai into html,css,js
complex frontend matlab ek jagah pe click karne se 4 5 jagah pe updates ho rhi hai
facebook phased a problem of phantom message there was problem like whenever you have new
message then we use to get notification then there was drop down wahape bhi msg likha aata tha
ki kisne kitne message bheje hai so wahase chatbox open hojata tha and wahape chat ka icon tha
wahase to pura chat ka part open hojata tha to problem yahape ye thiki maine chat pe click kiya 
user se baat karli but upar jo icon tha no of message likha hua wo gayab hi nahi ho raha tha
and agar notification pe click karke sidha chat ke pure content wale page pe aagaye ho then
wo icon notification mein bhi rahega and drop down mein bhi rahega 
state(variable) managed by js
ui->dom
there was no sync between state and ui
to solve this problem react came
initially khan academy and unsplash ne tarif ki react ki
jab ek button click karne pe 3 4 jagah state update ho to uss jagah pe react  bohot consistently work karta tha
React is library(library is cool dude more freedom)
component reusability aasan hogaya react through
props key value hi hai object jaisa
propogate changes is done using hook
react spa banata hai
router react ki core functionality nahi hai 
kabhi kabhi hamare paas bohot variables hojate hai to konsa variable kaha update horaha hai
wo manage karna difficult hojata hai so uske liye we have state management 
uska sabse famous hai redux
baas apps->appwrite,firebase,superbase(backend as a service)
react is not a complete solution no seo browser rendering (browser ko saara kam dete hai to convert into
html,css,js) so browser slow hojayega
next.js -> backend+frontend
vite parser ye sab bundler
react ke saath react-dom aur react-native bhi hota hai
if i want to work on the web i will use(react-dom)
npm is installer like pip 
agar install nahi sidha exec karna hai to we have npx
there are various ways to create react app
sabse basic method is {npx create-react-app <projectName>}
create-react-app is very bulky utility(software)
package.json is entry point
what is there in package.json there is name,version,testing library,react-scripts,web-vitals
(to track the performance of our website)
scripts hi project ko chalati hai
start development time mein kam karne ke time chalti hai
build production ke waqt use aata hai
test to run all test cases
browserlist konse browser pe chalege
cd karke project mein aajana usme aapko package.json dikhna chahiye nahi to aap galat location pe ho
npm run start   -> to run the application
page source pe dekhenege to kuch nahi hai isliye hi react seo ke liye acha nahi hai
now we will create using vite
npm create-vite@latest 
mention project name ->
select a framwork -> react
dev dependency sirf development ke dauran use hoti hai production mein nahi jaati
yahape hame node modules nahi milte hai yahape dependency mein hame koi testing library nahi milti
npm i se we will install node_modules
aap majorly src mein hi kaam karte hai
node_modules ke andar package.json ki saare dependency install karne ke baad yahape milegi
package lock.json wo saare dependency ko lock kardega ki wo yehi version pe chalega
dependency ka stable version lock kar dete hai
manifest file mobile device ke liye kaam aati hai
robots.txt search engine ke liye hai
index.html ke andar sirf ek empty div hai jiska id root hai
isme koi js file inject nahi ki hai
src mein entry point hai index.js zaruri nahi hai ki yehi naam se ho
react khudka dom banata hai(tree like structure) jisko virtual dom kehte hai
and compare karta hai ki original dom se kitna different hai virtual dom 
react hame jsx ki power deta hai ham custom tags bana sakte hai
js ke through html element render ho raha hai
function lo function ke andar html return karo and mein uss html ko render karvalunga
hamare paas programming capabilities aa gayi html ke andar
hamare paas react scripts hai jo chupkese index.html mein index.js load kar deti hai
vite ke andar thoda different hai and scripts ko sidha hi load kar liya hai kyuki waha pe react scripts hai hi nahi
script or testing library hat gayi isliye wo light hogayi
jab components banate hai tab .jsx likhte hai
ham ek html element return karte hai
vite se application banate hai to .jsx hi likhna padta hai and 1st letter capital hona chahiye file ka
ham to ek hi element return kar sakte hai so hamne <></> fragment return karliya
and iss fragment ke andar ham sab kuch wrap kar denge
using normal create method
whenever we create a component we capitalize the name of the function as well as file name
agar jsx return ho raha hai to .jsx hi rakhna but normal wale method mein it is not compulsory to write .jsx
ham spa kyu kehte hai kyuki hamare paas ek hi to div hai
logoko dikhta to root hi hai ham sirf user ko feel dete hai ke wo alag page pe hai ham url mein iskeliye manipulate karte hai
syntax ki parsing is done by some bundler like babel
behind the scence bohot saare optimization hoti hai
variables ya js kaise inject hogi {username}
{ye evaluated expression hai}
react.createElement is injected by babel
mein chahta hu button click hone pe work ho naki pehle se run hojaye
ui updation mein problem ho rahi hai variable updation will be handled by react itself
1 variable mulitple jagah pe update karna tha to uske liye react gave certain hooks using which we can work on updating the data
every hook have certain work
ui updation ko react handle karta hai
import react ki jarurat nahi ab kyuki ye sab meherbani ab babel kar raha hai
useState is responsible to propogate change in the ui
state ko change karne keliye responsible
default value kuch bhi de sakte hai empty object,array any string,value,etc..
1st is variable 2nd is method
kisika reference wagera nahi lena 
to update anything use setCounter
virtual dom is not used much in react nowadays
createRoot method behind the scene bohot kuch karta hai wo ek virtual dom create karta hai
and jo bhi changes hai use hi update karta hai but browser kya karta hai pura dom remove karta hai and usko wapas se repaint
karta hai uske karan hi loading wala symbol aata hai
virtual dom mein aap pura ke pure dom ka track rakh sakte ho and jo jo value change hui usko dom se niakl ke wapas rakh sakte ho
har ui ko instantaneouly update karna jaruri nahi hai
react fiber githhub
actual mein react dom abhi bhi hai but usko update karne kaam/algorithm is done by fiber
react behind the scene fiber hi use karti hai
animation bohot hit hoti thi update constantly aaya karte the se initial updates ki jagah sirf final update hi kardete hai
key features : ability to pause,abort or reuse work as new update come in
ability to assign priority to the different types of updates
hydration(button aa gaye ,images aagaye but js ab tak nahi aayi hai so web layout ban gayi ab js load hoyegi)
button ka main kaam kya hai click hona hi to hai to click kai baar nahi hota to hydration process iss algorithm se better ho jati hai
roconcillation: the algorithm react use to differentiate one tree with another tree to determine which parts to be changed
reconciliation is the algorithm behind what is popularly understood as virtual dom
diffing of list is performed using keys.(list ki performance improve karna ho to keys ka use karna hi padega)
props->properties
image tag ko closing tag mein daalna hoga
props component ko banata hai reusable
ham jo bhi value pass karenge wo receive hojayega
array,object mein const mein bhi update kar sakte hai
***interview question***
counter application -> agar setCounter mulitple times kiya then wo ek click pe ek bhi baar hi update hona hai
useState kya karta hai aapko jitne bhi updates bhejne hai wo batches mein bhejta hai
aap ek hi kaam baar baar kar raha ho sablog ek hi counter ko update kar rahe hai
arre same hi to kaam hai so ham usse prevCounter dete hai
setCounter mein aapko callback milta hai aap jaise hi prevCounter dete ho(last updated state)
so callback ke through jab aata hai tab complete hone ke baad dusra call hota hai wahape update hota hai
what i can see is colors change ho rahe hai to colors ko mujhe koi na koi variable mein hold karna padega
kyuki wo sirf color variable nahi but ui mein jaake update ho raha hai is liye hame ek state chahiye
onClick ko function chahiye and agar mujhe parameter pass karne hoto i have to use a callback
***Password Generator***
ek to length chahiye and length update karnekeliye we need useState
in checkbox we have true false numberAllowed,setNumberAllowed
password field mein bhi data aata hai so uska bhi hame ek useState chahiye
useCallback 
hooks kya hai ek function hi to hai
hooks purely js hi return karte hai ,standardized approach to use use
mein chahte hu ki jab data load ho tab mein hook ko call karu
useEffect will be use in this case so isme fetch automatically call hojayega function ke andar function call nahi karna padega
jabbhi data milta hai wo string format mein hota hai date ki hame requirement nahi hai

////React Router Crash////
parameter capture karna is possible in the url and wo ek baar sikh gaye to 
then id,productId sabkuch same hi hai
react-router-dom is 3rd party library 
link we use in case of a tag 
navLink provide us extra things 
when we are in header than how will the header know on which page it is for that we have to use
callback in classes callback ki classes ko manipulate kaise karte hai uske liye we have access of 1 variable isActive
hamne react router install kar liye hai to hame abhi react-router-dom ki taraf jana hoga
ham index.js mein we will use RouterProvider and it requires a router
and this router is created using BrowserRouter which takes an array
there is one more method createRoutesFromElement
myparams -> 'user/:userid'  userid ko notedown karlena
jab bhi ham fb pe ya koi bhi site pe jaate hai layout to same hi rehta hai sirf aapka data change hojata hai
useParams ye bhi react-router-dom se hi aata hai
isme jo bhi url mein aata hoga uska access aapko miljayega then let it be any value or string
uske basis pe aap kuch display karana chahte ho ya koi db calll karna chahte ho wo totally ispe depend karta hai
api call hame chahiye jab github wala page load ho so this is possible through useEffect
fetch call karenge usme api ka url daalenge and baadme .then mein response milega ye response
string format mein hai we will convert it into json format
and baadme aur ek .then mein hame actual data milega to ab wo data ko page pe render karnekeliye
ek state chahiye so we will use useState
outlet ke help se ham react router dom mein nesting kar sakte hai
loader helps in optimization whenever user hpver also it starts fetching data so it has less lag
we have a hook for loader useLoaderData
ye optimization aapko nextjs bhi deta hai abt loader 
ham direct api calls loader ke andar hi callback ke through kar sakte hai so jaisa ham mouse ya cursor
late hai fetching shuru ho jata hai and cache mein bhi store rakhta hai useEffect ke pehle bhi hojata hai
loader ke andar pura fetch likh sakte hai but documentation mein wo log ne method call kiya hai
ham wo response ko directly return kar sakte hai ye promise hai then also we can return it but we have to 
return it using response.json()
ham top level pe layout rakhte hai to uske basis pe hi routing hogi
uske andar outlet laga rakha hai tabhi wo uske andar ka reflect karega
ham dynamic value bhi le sakte hai url se user/:userid


///////useEffect,useCallback,useRef////////
ek hi method ko baar baar run karna hai to wo method ko agar optimized way mein kiya then it will be good
length ko track karnekeliye useState Lagega and uski default value lemi hogi
ek hi method ko baar baar call karna hai so useCallback is used for that
useCallback is a react hook that lets you cache a function definition between rerenders
mere paas ek function hai usko jitna ho sake utna cache mein rakhlo and jab bhi wapas run ho to jitna pehle ka part ho wo wapas run hojaye
in useCallback we pass function and dependency (ye change hotehi function dubara run hona chahiye)
setPassword ke basis pe bhi function re run karna hai 
memoization ka bhi concept use kiye hai(caching ka)
memoization ka concept hai to ek dependency aap usko wo bhi pass kardo set ho rahi hai
jitni bhi dependency hai usme rerun hoga to agar mein setPassword ki jagah sirf password deta to wo infininte loop mein fas jata

prev=>!prev  prev value ka access milta hai
useEffect hook is used 
it requires callback function and dependency array
inme kuch bhi chedchad ho dubara se run karna like length mein ya checkbox mein 
kuch bhi chedchad ho dubara se run karna
run karneka is achieved through useEffect
useRef is referencing hook kisi bhi chiz ka reference lena ho to we use this hook
koi bhi element ka aap reference leke usme changes kar sakte ho
kisko select karu kya changes karu
agar dependency hai to think of useCallback 
hamne optionally select karvate hai(?.) to null value ya empty value ho to select nahi hoga
useEffect page load hota hai tabhi call hota hai and dependency array 
mein se kiske saath changes hui to wapas call hoga


//// currencyConverter /////
koi bhi component mount hota hai ya uska lifecycle trigger hota hai to hamare paas ek hook hai useEffect
hooks function hi to hai
custom hook banana is not a big thing they normally returns js
kai hook optional argument leta hai
mein directly fetch bhi call kar sakta hu but mujhe chahiye ki jab ye hook load hoga tab mein iss hook ko call karna chahta hu
useEffect mein automatically fetch call hojayega and mujhe iss function ke andar aur ek function ko call nahi karna padega
fetch ke saath i can do chaining
currency ke andar jab bhi change ho mein usse call karna chahta hu
loops mei key ka dhyan rakhe to performance degrade na ho
ids are more preferred in key
do not call useId for keys in loop


///// context api /////
props ke andar props sirf aage pass karnekeliye a prop has to go to various places
